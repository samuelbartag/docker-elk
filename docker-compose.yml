version: '2.3'

services:
  elasticsearch:
    container_name: monitor_elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: always
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./elasticsearch/data:/usr/share/elasticsearch/data:rw
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elk

  logstash:
    container_name: monitor_logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: always
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    container_name: monitor_kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: always
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
      - elastalert

  elastalert:
    container_name: monitor_elastalert
    image: bitsensor/elastalert:2.0.0
    restart: always
    ports:
      - "3030:3030"
      - "3333:3333"
    volumes:
      - ./elastalert/config/elastalert.yml:/opt/elastalert/config.yaml
      - ./elastalert/config/config.json:/opt/elastalert-server/config/config.json
      - ./elastalert/rule_templates:/opt/elastalert/rule_templates:rw
      - ./elastalert/rules:/opt/elastalert/rules:rw
      - ./elastalert/data:/opt/elastalert/server_data:rw
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge
